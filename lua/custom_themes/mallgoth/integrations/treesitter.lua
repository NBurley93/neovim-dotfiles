local P = require("custom_themes.mallgoth.palette")

return {
    highlights = {
        -- Core text-ish
        ["@comment"] = { fg = P.muted, italic = true },
        ["@comment.todo"] = { fg = P.sickly_yellow, bold = true },
        ["@comment.note"] = { fg = P.acid_teal, bold = true },
        ["@comment.warning"] = { fg = P.sickly_yellow, bold = true },
        ["@comment.error"] = { fg = P.harsh_magenta, bold = true },

        ["@string"] = { fg = P.electric_violet },
        ["@string.escape"] = { fg = P.neon_green, bold = true },
        ["@string.special"] = { fg = P.acid_teal },
        ["@character"] = { fg = P.electric_violet },
        ["@number"] = { fg = P.rose_red },
        ["@boolean"] = { fg = P.rose_red, bold = true },
        ["@float"] = { fg = P.rose_red },

        -- Identifiers
        ["@variable"] = { fg = P.fg },
        ["@variable.builtin"] = { fg = P.pale_lilac, italic = true },
        ["@variable.parameter"] = { fg = P.pale_lilac },
        ["@variable.member"] = { fg = P.pale_lilac }, -- fields
        ["@field"] = { fg = P.pale_lilac },
        ["@property"] = { fg = P.pale_lilac },
        ["@constant"] = { fg = P.rose_red },
        ["@constant.builtin"] = { fg = P.rose_red, bold = true },
        ["@constant.macro"] = { fg = P.rose_red, italic = true },
        ["@namespace"] = { fg = P.acid_teal, bold = true },
        ["@symbol"] = { fg = P.acid_teal },

        -- Types
        ["@type"] = { fg = P.acid_teal, bold = true },
        ["@type.builtin"] = { fg = P.acid_teal, italic = true },
        ["@type.definition"] = { fg = P.acid_teal, bold = true },
        ["@type.qualifier"] = { fg = P.neon_green },

        -- Functions
        ["@function"] = { fg = P.acid_teal, bold = true },
        ["@function.builtin"] = { fg = P.acid_teal, italic = true },
        ["@function.macro"] = { fg = P.neon_green, bold = true },
        ["@constructor"] = { fg = P.acid_teal },
        ["@method"] = { fg = P.acid_teal },

        -- Keywords & flow
        ["@keyword"] = { fg = P.neon_green, bold = true },
        ["@keyword.function"] = { fg = P.neon_green, bold = true },
        ["@keyword.operator"] = { fg = P.neon_green },
        ["@keyword.return"] = { fg = P.neon_green },
        ["@conditional"] = { fg = P.neon_green },
        ["@repeat"] = { fg = P.neon_green },
        ["@label"] = { fg = P.neon_green },
        ["@include"] = { fg = P.neon_green },
        ["@exception"] = { fg = P.neon_green },

        -- Operators & punctuation
        ["@operator"] = { fg = P.fg },
        ["@punctuation.delimiter"] = { fg = P.fg },
        ["@punctuation.bracket"] = { fg = P.fg },
        ["@punctuation.special"] = { fg = P.neon_green },

        -- Tags (HTML/TSX/etc.,
        ["@tag"] = { fg = P.acid_teal, bold = true },
        ["@tag.attribute"] = { fg = P.pale_lilac },
        ["@tag.delimiter"] = { fg = P.fg },

        -- Diffs (when TS annotates,
        ["@diff.plus"] = { fg = P.neon_green },
        ["@diff.minus"] = { fg = P.rose_red },
        ["@diff.delta"] = { fg = P.sickly_yellow },

        -- Markdown niceties
        ["@text.title"] = { fg = P.electric_violet, bold = true },
        ["@text.strong"] = { fg = P.fg, bold = true },
        ["@text.emphasis"] = { fg = P.fg, italic = true },
        ["@text.uri"] = { fg = P.neon_green, underline = true },
        ["@text.todo"] = { fg = P.sickly_yellow, bold = true },
        ["@text.note"] = { fg = P.acid_teal, bold = true },
        ["@text.warning"] = { fg = P.sickly_yellow, bold = true },
        ["@text.danger"] = { fg = P.harsh_magenta, bold = true },
        ["@text.literal"] = { fg = P.electric_violet },
        ["@text.reference"] = { fg = P.pale_lilac },

        -- Rainbow-delimiters (if you use it,
        RainbowDelimiterRed = { fg = P.rose_red },
        RainbowDelimiterYellow = { fg = P.sickly_yellow },
        RainbowDelimiterBlue = { fg = P.acid_teal },
        RainbowDelimiterOrange = { fg = P.neon_green },
        RainbowDelimiterGreen = { fg = P.neon_green },
        RainbowDelimiterViolet = { fg = P.electric_violet },
        RainbowDelimiterCyan = { fg = P.acid_teal },

        -- indent-blankline / ibl
        IblIndent = { fg = "#161616" },
        IblScope = { fg = P.line_focus },
    },

    links = {
        -- LSP semantic tokens routed to TS where sane
        ["@lsp.type.class"] = "@type",
        ["@lsp.type.struct"] = "@type",
        ["@lsp.type.enum"] = "@type",
        ["@lsp.type.type"] = "@type",
        ["@lsp.type.typeParameter"] = "@type",
        ["@lsp.type.interface"] = "@type",
        ["@lsp.type.parameter"] = "@variable.parameter",
        ["@lsp.type.property"] = "@property",
        ["@lsp.type.variable"] = "@variable",
        ["@lsp.type.function"] = "@function",
        ["@lsp.type.method"] = "@method",
        ["@lsp.type.macro"] = "@function.macro",
        ["@lsp.type.enumMember"] = "@constant",
        ["@lsp.typemod.variable.readonly"] = "@constant",
        ["@lsp.typemod.variable.global"] = "@variable.builtin",

        -- Old TS* group backfills (because some plugins still live in the past,
        TSComment = "@comment",
        TSString = "@string",
        TSCharacter = "@character",
        TSNumber = "@number",
        TSBoolean = "@boolean",
        TSFloat = "@float",
        TSVariable = "@variable",
        TSVariableBuiltin = "@variable.builtin",
        TSParameter = "@variable.parameter",
        TSField = "@field",
        TSProperty = "@property",
        TSConstant = "@constant",
        TSConstBuiltin = "@constant.builtin",
        TSConstMacro = "@constant.macro",
        TSType = "@type",
        TSTypeBuiltin = "@type.builtin",
        TSFunction = "@function",
        TSFuncBuiltin = "@function.builtin",
        TSFuncMacro = "@function.macro",
        TSConstructor = "@constructor",
        TSMethod = "@method",
        TSKeyword = "@keyword",
        TSKeywordFunction = "@keyword.function",
        TSKeywordOperator = "@keyword.operator",
        TSConditional = "@conditional",
        TSRepeat = "@repeat",
        TSLabel = "@label",
        TSInclude = "@include",
        TSException = "@exception",
        TSOperator = "@operator",
        TSPunctDelimiter = "@punctuation.delimiter",
        TSPunctBracket = "@punctuation.bracket",
        TSPunctSpecial = "@punctuation.special",
        TSTag = "@tag",
        TSTagDelimiter = "@tag.delimiter",
    },
}
